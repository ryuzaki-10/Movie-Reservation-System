
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.3.0'
}


group = 'com.movie'
version = '1.0.0'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

tasks.jar {
	archiveBaseName.set('ticket-reservation-system')
	archiveVersion.set('') // Leave empty to avoid version in the file name
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.yaml:snakeyaml:1.33'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations.all {
    resolutionStrategy.force 'org.yaml:snakeyaml:2.0'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/openapi.yml"
	outputDir = "$buildDir/generated"
	apiPackage = "com.movie.reservation.api"
	modelPackage = "com.movie.reservation.model"
	invokerPackage = "com.movie.reservation.invoker"
	validateSpec = false
	configOptions = [
			dateLibrary: "java8",
			useSpringBoot3: "true",
			interfaceOnly: "true",
			skipDefaultInterface: "true",
			annotationLibrary: "jakarta",
			oas3: "true",
			useJakartaEe : "true"
	]
}

compileJava.dependsOn('openApiGenerate')

tasks.named('test') {
	useJUnitPlatform()
}


sourceSets {
	main {
		java {
			srcDir "$buildDir/generated/src/main/java"
		}
	}
}